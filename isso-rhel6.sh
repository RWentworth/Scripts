#! /bin/sh

# *** DEVELOPED BY TREVOR BRYANT/RICHARD WENTWORTH, PHACIL INC
# *** isso-rhel6.sh version 1.0.0, 12/17/2014
# *** REQUIRES SUDO

STAMP=`date +%m%d%Y`_`date +%H%M`
server=$(hostname)
output=/tmp/"$server"_"$STAMP".txt

echo "Executing ..."
ONE=1
(if [ $ONE -eq 1 ]; then

echo "Executed by $(whoami) on $STAMP"
echo "Users logged in at time of execution:"
who -m
uname -a
cat /etc/*-release 
echo -e "Executing Red Hat Enterprise Linux 6 Security Configuration Standard 1.0 8/5/2013\n"

echo "1) Physical access"
echo -e "\n"
echo "2) Hardware"
echo -e "\n"
echo "3) Configuration prior to connecting to network"
echo -e "This requirement is N/A -- CA requires new servers to be connected for patching.\n"
echo "4) Regional language"
echo -e "$(egrep RC_LANG= /etc/sysconfig/language)\n"
echo "5) Hostname naming convention"
echo -e "$(hostname)\n"
echo "6) Root password complexity"
echo -e "This requirement is dependent upon section 6. Password Security\n"
echo "7) Root password storage"
echo -e "\n"
echo "8-14) Separate partition for / (root), /boot, /home, /tmp/, /var, /var/log, /var/log/audit\nThese requirements can only be performed at initial server build. This cannot be performed after."
echo -e "$(cat /etc/fstab)\n"
echo "15) GRUB boot Loader"
echo -e "$(ls -l /boot/grub/grub.conf)$(rpm -q grub)\n"
echo "16) Boot loader password"
echo -e "$(egrep password /boot/grub/grub.conf)\n"
echo "17) Package management"
echo -e "$(which yum)$(which rpm)\n"
echo "18) Removable media as the boot loader"
echo -e "$(cat /etc/grub.conf)\n"
echo "19) Install anti-virus software"
echo -e "$(rpm -q savlinux)\n"
echo "20-23) Add nodev, nosuid, noexec option to non-root local partitions"
echo -e "$(cat /etc/fstab)\n"
echo "24) Authorized repositories for software and updates"
echo -e "$(ls -l /etc/yum.repos.d)\n"
echo "25) Verify signed packages"
echo -e "$(rpm -q --queryformat "%{SUMMARY}\n" gpg-pubkey)\n"
echo "26) Accounts with blank or null passwords"
echo -e "$(awk -F: '($2 == "") {print}' /etc/shadow)$(egrep nullok /etc/pam.d/system-auth)\n"
echo "27-33) Minimum password length, Password contains at least one upper case letter, Password contains at least one lower case letter, Password contains at least one arabic numeral, Password contains at least one nonalphanumeric character (punctuation symbol), Password character difference, Repeating characters in passwords"
echo -e "$(egrep minlen /etc/pam.d/system-auth)\n"
echo "34) Password history"
echo -e "$(egrep remember  /etc/pam.d/system-auth)\n"
echo "35) Disable account after unsuccessful logins"
echo -e "$(egrep "auth required" /etc/pam.d/login)\n"
echo "36) FIPS 140-2 algorithms for account password hashes"
echo -e "$(egrep "password .* pam_unix.so" /etc/pam.d/system-auth-ac)\n"
echo "37) Password hashes in /etc/passwd"
echo -e "$(awk -F: '($2 != "x") {print}' /etc/passwd)\n"
echo "38-39) Maximum password age, Minimum password age"
echo -e "$(egrep _DAYS /etc/login.defs)\n"
echo "40) Group password hashes in /etc/group"
echo -e "$(cut -d : -f 2 /etc/group | egrep -v '^(x|!)$')\n"
echo "41) Root password change frequency"
echo -e "Standard is change root password upon compromise or employee exit/termination.\n"
echo "42) Unnecessary acounts"
echo -e "$(cut -d: -f1 /etc/passwd)\n"
echo "43) Block shell access and lock non-root system accounts"
echo -e "$(grep "^.*[^\/nologin]$" /etc/passwd)\n"
echo "44) Inactive accounts"
echo -e "$(egrep INACTIVE= /etc/default/useradd)\n"
echo "45) Login banner"
echo -e "$(cat /etc/issue)\n"
echo "46) Restrict root logins to system console"
echo -e "$(cat /etc/securetty)\n"
echo "47) Remove or disable unnecessary system accounts"
echo -e "This requirement is dependent upon review of item #42.\n"
echo "48) Single user mode authentication"
echo -e "$(egrep :S: /etc/inittab)\n"
echo "49) Root account UID"
echo -e "$(awk -F: ' ($3 == "0") {print}' /etc/passwd)\n"
echo "50) GID for non-system groups"
echo -e "$(cut -d: -f 1,4 /etc/passwd|egrep ":[1-4][0-9]{2}$|:[0-9]{1,2}$")\n"
echo "51) UID for non-system accounts"
echo -e "$(cut -d: -f 1,3 /etc/passwd|egrep ":[1-4][0-9]{2}$|:[0-9]{1,2}$")\n"
echo "52) Unique user account name"
echo -e "$(pwck -r)\n"
echo "53) Unique user uids"
echo -e "$(cut -d: -f3 /etc/passwd | uniq -d)\n"
echo "54) Unique user group"
echo -e "$(cut -d: -f 1 /etc/group)\n"
echo "55) Direct log in with root account"
echo -e "$(last root -i)\n"
echo "56) Disable interactive startup"
echo -e "$(egrep PROMPT= /etc/sysconfig/ini)\n"
echo "57) Enable SELinux"
echo -e "$(egrep SELINUX /etc/selinux/config)\n"
echo "58) Limit su access to the root account"
echo -e "$(grep ^wheel /etc/group)$(egrep use_uid /etc/pam.d/su)\n"
echo "59) Configure sudo access"
echo -e "$(cat /etc/sudoers)\n"
echo "60) Relative path or null directories in root's path"
echo -e "$(env | grep PATH)\n"
echo "61) World-writable or group-writable directories in root's path"
echo -e "$(find / -perm -2 -a \( -type d -o -type f \) -exec ls -ld {} \;)\n"
echo "62) Inactivity timeout for login shells"
echo -e "$(egrep ClientAlive /etc/ssh/sshd_config)\n"
echo "63) Install AIDE"
echo -e "$(rpm -qa | grep aide)\n"
echo "64) Implement periodic file integrity check"
echo -e "$(crontab -u root -l)\n"
echo "65) Install TCP_WRAPPERS"
echo -e "$(rpm -qa | grep *tcp*)\n"
echo "66) Configure network access control"
echo -e "$(egrep ALL /etc/hosts.allow)\n"
echo "67) Display last successful login"
echo -e "$(egrep pam_lastlog /etc/pam.d/sshd)$(sudo egrep PrintLastLog /etc/ssh/sshd_config)\n"
echo "68) Remote access tool"
echo -e "$(rpm -qa | grep -e ssh -e ftp -e telnet)\n"
echo "69) Configure SSH protocol version"
echo -e "$(egrep Protocol /etc/ssh/sshd_config)\n"
echo "70) Configure SSH cipers"
echo -e "$(egrep Ciphers /etc/ssh/sshd_config)\n"
echo "71) Disable remote access for root"
echo -e "$(egrep PermitRootLogin /etc/ssh/sshd_config)\n"
echo "72) Inactivity timeout for ssh sessions"
echo -e "$(egrep ClientAlive /etc/ssh/sshd_config)\n"
echo "73) Disable empty passwords for SSH"
echo -e "$(egrep PermitEmpty /etc/ssh/sshd_config)\n"
echo "74) Enable auditing"
echo -e "$(ls -l /etc/audit/audit.rules)$(service auditd status)\n"
echo "75) Audit failed login attempts"
echo -e "$(egrep /faillog /etc/audit/audit.rules)$(egrep /lastlog /etc/audit/audit.rules)\n"
echo "76) Audit login, logout, and session initiation"
echo -e "$(egrep utmp /etc/audit/audit.rules)$(egrep btmp /etc/audit/audit.rules)$(egrep wtmp /etc/audit/audit.rules)\n"
echo "77) Audit root account access"
echo -e "$(egrep faillog /etc/audit/audit.rules)$(egrep lastlog /etc/audit/audit.rules)\n"
echo "78) Audit modifications system date and time"
echo -e "$(egrep settime /etc/audit/audit.rules)$(egrep localtime /etc/audit/audit.rules)\n"
echo "79) Audit modifcations to system network configuarations"
echo -e "$(egrep modifications /etc/audit/audit.rules)\n"
echo "80) Audit modifications to mandatory access controls"
echo -e "$(egrep selinux /etc/audit/audit.rules)\n"
echo "81) Audit discretionary access controls"
echo -e "$(egrep chown /etc/audit/audit.rules)\n"
echo "82) Audit unsuccessful access attempts to files"
echo -e "$(egrep openat /etc/audit/audit.rules)\n"
echo "83) Audit the use of privilege commands"
echo -e "$(egrep priv* /etc/audit/audit.rules)\n"
echo "84) Audit mounting and unmounting of file systems"
echo -e "$(egrep mount /etc/audit/audit.rules)\n"
echo "85) Audit file deletions"
echo -e "$(egrep delete /etc/audit/audit.rules)\n"
echo "86) Audit modification to sudoers and sudo logs"
echo -e "$(egrep sudoers /etc/audit/audit.rules)\n"
echo "87) Make audit configuration immutable"
echo -e "$(egrep insmod /etc/audit/audit.rules)$(egrep rmmod /etc/audit/audit.rules)$(egrep modprobe /etc/audit/audit.rules)$(egrep module /etc/audit/audit.rules)\n"
echo "88) Audit account modification"
echo -e "$(egrep usermod /etc/audit/audit.rules)$(egrep groupmod /etc/audit/audit.rules)\n"
echo "89) Audit account creation"
echo -e "$(egrep useradd /etc/audit/audit.rules)$(egrep groupadd /etc/audit/audit.rules)\n"
echo "90) Configure NTP server"
echo -e "$(egrep server /etc/ntp.conf)\n"
echo "91) Disable Kernel core dumps"
echo -e "$(egrep core /etc/security/limits.conf)\n"
echo "92) Remove telnet server/client"
echo -e "$(rpm -qa | grep telnet)\n"
echo "93) Remove rsh server/client"
echo -e "$(rpm -qa | grep rsh)\n"
echo "94) Remove Nework Information Service server/client"
echo -e "$(rpm -qa | grep ypserv)$(rpm -qa | grep ypbind)\n"
echo "95) Remove unencrypted FTP server/client"
echo -e "$(rpm -qa | grep ftp)\n"
echo "96) Remove xinetd"
echo -e "$(rpm -qa | grep xinetd)\n"
echo "97) Disable USB mass storage when not in use"
echo -e "$(cat /etc/modprobe.d/blacklist-usb-storage.conf)$(cat /etc/modprobe.d/usgcb-blacklist.conf)\n"
echo "98) Disable wireless modules"
echo -e "$(cat /etc/modprobe.d/blacklist-wireless.conf)\n"
echo "99) Disable uncommon filesystem types"
echo -e "$(cat /etc/modprobe.d/blacklist-usb-storage.conf)\n"
echo "100) Enable firewall"
echo -e "$(service firewall status)\n"
echo "101) Firewall policy"
echo -e "$(cat /etc/sysconfig/iptables)\n"
echo "102) Disable IPv6"
echo -e "$(egrep IPV6 /etc/sysconfig/network)\n"
echo "103) Disable IP forwarding"
echo -e "$(egrep ipv4.ip /etc/sysctl.conf)\n"
echo "104) Disable send packet redirects"
echo -e "$(egrep send_redirects /etc/sysctl.conf)\n"
echo "105) Disable source routed packet acceptance"
echo -e "$(egrep accept_source /etc/sysctl.conf)\n"
echo "106) Disable ICMP redirect acceptance"
echo -e "$(egrep accept_redirects /etc/sysctl.conf)\n"
echo "107) Disable secure ICMP redirect acceptance"
echo -e "$(egrep secure_redirects /etc/sysctl.conf)\n"
echo "108) Log suspicious packets"
echo -e "$(egrep log_martians /etc/sysctl.conf)\n"
echo "109) Enable ignore broadcast requests"
echo -e "$(egrep ignore_broadcast /etc/sysctl.conf)\n"
echo "110) Enable bad error message protection"
echo -e "$(egrep bogus /etc/sysctl.conf)\n"
echo "111) Enable RFC-recommended source route validation"
echo -e "$(egrep rp_filter /etc/sysctl.conf)\n"
echo "112) Enable TCP SYN cookies"
echo -e "$(egrep syncookies /etc/sysctl.conf)\n"
echo "113) X Windows"
echo -e "$(rpm -qa | grep Window)\n"
echo "114) Root log in through X Windows"
echo -e "$(cat /etc/pam.d/gdm)\n"
echo "115) X Windows idle timeout)"
echo -e "Research needed on gfonctool-2 settings\n"
echo "116-117) System audit log ownership, System log permissions"
echo -e "$(ls -la /var/log/audit/audit.log)\n"
echo "118) System audit log group ownership"
echo -e "$(ls -lR /var/log)\n"
echo "119) Ownership of public directories"
echo -e "$(ls -la /)\n"
echo "120-121) Permission and ownership for user home directories, Ownership of user home directories"
echo -e "$(ls -l /home)\n"
echo "122-125) Permission for shell files, Ownership of shell files, Group ownership of shell files, Extended ACL for shell files"
echo -e "$(cat /etc/shells | xargs -n1 ls -l)\n"
echo "126-129) Permission for /boot/grub/grub.conf, Ownership of /boot/grub/grub.conf, Group ownership of /boot/grub/grub.conf, Extended ACL for /boot/grub/grub.conf"
echo -e "$(ls -la /etc/grub.conf)\n"
echo "130-133) Permission for /etc/security/access.conf, Ownership of /etc/security/access.conf, Group ownership of /etc/security/access.conf, Extended ACL for /etc/security/access.conf"
echo -e "$(ls -la /etc/security/access.conf)\n"
echo "134-137) Permission for /etc/group, Ownership of /etc/group, Group ownership of /etc/group, Extended ACL for /etc/group"
echo -e "$(ls -la /etc/group)\n"
echo "138-141) Permission for /etc/gshadow, Ownership of /etc/gshadow, Ownership of /etc/gshadow, Group ownership of /etc/gshadow, Extended ACL for /etc/gshadow"
echo -e "$(ls -la /etc/gshadow)\n"
echo "142-145) Permission for /etc/hosts, Ownership of /etc/hosts, Group ownership of /etc/hosts, Extended ACL for /etc/hosts"
echo -e "$(ls -la /etc/hosts)\n"
echo "146-149) Permission for /etc/passwd, Ownership of /etc/passwd, Group ownership of /etc/passwd, Extended ACL for /etc/passwd"
echo -e "$(ls -la /etc/passwd)\n"
echo "150-153) Permission for /etc/resolv.conf, Ownership of /etc/resolv.conf, Group ownership of /etc/resolv.conf, Extended ACL for /etc/resolv.conf"
echo -e "$(ls -la /etc/resolv.conf)\n"
echo "154-157) Permission for /etc/securetty, Ownership of /etc/securetty, Group ownership of /etc/securetty, Extended ACL for /etc/securetty"
echo -e "$(ls -la /etc/securetty)"
echo "158-161) Permission for /etc/shadow, Ownership of /etc/shadow, Group ownership of /etc/shadow, Extended ACL for /etc/shadow"
echo -e "$(ls -la /etc/shadow)\n"
echo "162-165) Permission for /etc/sysctl.conf, Ownership of /etc/sysctl.conf, Group ownership of /etc/sysctl.conf, Extended ACL for /etc/sysctl.conf"
echo -e "$(ls -la /etc/sysctl.conf)\n"
echo "166-169) Permission for /etc/rsyslog.conf, Ownership of /etc/rsyslog.conf, Group ownership of /etc/rsyslog.conf, Extended ACL for /etc/rsyslog.conf"
echo -e "$(ls -la /etc/rsyslog.conf)\n"
echo "170-173) Permission for alias file, Ownership of alias file, Extended ACL for alias file, Extended ACL for alias file"
echo -e "$(ls -la /etc/csh.cshrc)\n"
echo "174-177) Permission for /etc/services, Ownership of /etc/services, Group ownership of /etc/services, Extended ACL for /etc/services"
echo "181) Non-default files with setuid bit"
echo -e "$(find / -xdev -perm -2000 -type f -print)\n"
echo "182) Non-default files with setgid bit"
echo -e "$(find / -xdev -perm -4000 -type f -print)\n"
echo "183) Files and directories ownership"
echo -e "$(find / -xdev \( -nouser -o -nogroup \) -print)\n"
echo "184) Default umask"
echo -e "$(grep umask /etc/*)\n"
echo "185) World-writable directories and files"
echo -e "$(find / -type d -perm -002)\n"
echo "186) Set sticky bit for world-writable directories"
echo -e "$(find / -type d -perm -002)\n"
echo "187) Home directory for interactive users"
echo -e "$(ls -la /home)\n"
fi) &> $output
echo "Results saved $output"
chmod 775 $output
